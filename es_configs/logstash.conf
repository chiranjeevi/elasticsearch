# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

input {
file 
    {
#        codec => json
 #       path => ["/root/pcap/5pcapjson.json"]
  #      start_position => "beginning"
   #     sincedb_path => "/dev/null"
   	type => "json"
	path => "/root/pcap/2milRecords_new.json"
#	path => "/root/pcap/5pcapjson.json"
	start_position => "beginning"
    }
}

#filter{
#date {
#match => [ "timestamp", "UNIX" ]
#}
filter {
json {
source => "message"
}
mutate{
    		rename => {"[layers][ip][ip_ip_src]" => "source.ip"}
		rename => {"[layers][ip][ip_ip_dst]" => "destination.ip"}
		rename => {"[layers][tcp][tcp_tcp_dstport]" => "dest.port"}
		rename => {"[layers][tcp][tcp_tcp_srcport]" => "source.port"}
		rename => {"[layers][frame][frame_frame_protocols]" => "network.proto"}
}
translate {
        field => "source.ip"
        destination => "source.branch"
 	regex => true
	exact => true
        dictionary_path => "/root/branches_new.yml"
      }
translate {
        field => "destination.ip"
        destination => "destination.branch"
        regex => true
        exact => true
	dictionary_path => "/root/branches_new.yml"
      }
translate {
        field => "source.ip"
        destination => "src.branch.type"
        regex => true
        exact => true
        dictionary_path => "/root/branches_codes.yml"
      }
translate {
        field => "destination.ip"
        destination => "dest.branch.type"
        regex => true
        exact => true
        dictionary_path => "/root/branches_codes.yml"
}

#		convert => { '[_source][geo][location]' => 'float'
    
#geoip { source => "[layers][ip][ip_ip_src]"
#target => "source.geo.ip"
#} 
#geoip { source => "destination.ip"}
#geoip { source => "source.ip"}
#geoip {
#	source => "[layers][ip][ip_ip_src]"
#	add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
#	add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}" ]
#}
#convert {
#	convert => [ "[geoip][coordinates]", "geo_point" ]
#}

geoip {
source => "source.ip"
target => "srcgeo"
#add_field => [ "[srcgeo][coordinates]", "%{[srcgeo][longitude]}" ]
#add_field => [ "[srcgeo][coordinates]", "%{[srcgeo][latitude]}" ]
}
geoip { 
source => "destination.ip"
target => "destgeo"
}
#mutate {
#convert => [ "[source.geo.location][coordinates]", "float"]
#}
mutate { remove_field => [ "message" ] }
mutate {
        split => { "network.proto" => "eth:ethertype:ip:" }
        add_field => { "network_protocol" => "%{[network.proto][1]}" }
    }
mutate { remove_field => [ "network.proto" ] }
date {
    timezone => "UTC"
    match => ["timestamp", "UNIX_MS"]
    target => "@timestamp"
}
}

output {
  elasticsearch {
    hosts => ["https://search-qa-rona-3nn4ryg2flk4qok626bqzew2by.us-east-1.es.amazonaws.com:443"]
    index => "packet2021-%{+YYYY.MM.dd}"
    template_overwrite => "true"
    manage_template => "true"
    template_name => "packet2021"
}
	stdout { codec => rubydebug }
}
